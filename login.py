from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.chrome.options import Options
from selenium.common.exceptions import NoSuchElementException
import time
import settings

def testEmails(inputEmails):
	#Use the correct google user profile for chrome
	options = Options()
	options.add_argument("user-data-dir=/Users/andersonhatcherthomas/Library/Application\ Support/Google/Chrome/Profile\ 1")
	driver = webdriver.Chrome(chrome_options=options)

	driver.set_window_size(1120, 550)
	driver.implicitly_wait(50)

	print("Loading login page...")

	#Go to the login page, will likely be already logged in
	driver.get("https://accounts.google.com/ServiceLogin?service=mail#identifier")
	driver.set_window_size(1000, 800)
	time.sleep(4)

	#Test if we are already logged in, if we are we will only need to reenter our password.
	try:
		driver.find_element_by_xpath("//h2[contains(text(), 'Please re-enter your password')]")
		print("Found re-enter password...")
    #We are not already logged in, lets login
	except NoSuchElementException:
		print("Found no such element exception")
		usernametext = driver.find_element_by_name('Email')
		usernametext.send_keys(settings.email)
		time.sleep(3)
		driver.find_element_by_name('signIn').click()
		pass
    
	#The driver has identified the password box and will enter the password
	passwordtext = driver.find_element_by_name('Passwd') \
							 	.send_keys([settings.password, Keys.RETURN])
	print("Signed in. Going to sleep...")



	#Time to sleep a little, allow the driver to login
	time.sleep(23)
	print("Waking up. Going to compose message...")

	#Find the compose button
	driver.find_element_by_xpath("//div[contains(text(),'COMPOSE')]").click()

	#Test the emails generated by the calling method
	succesfulEmails = isValidEmails(driver, inputEmails)

	driver.close()

	#Return succesful emails
	return succesfulEmails

def isValidEmails(driver, inputEmails):
	validEmails = []
	for email in inputEmails:
		driver.find_element_by_xpath("//textarea[@name='to']").click()
		driver.find_element_by_xpath("//textarea[@name='to']").send_keys(email)
		driver.find_element_by_xpath("//textarea[@name='to']").send_keys(' ')
		try:
			driver.find_element_by_xpath("""./[@id="rapportive-sidebar"]//div//ul[1]""")
			validEmails.append(email)
			time.sleep(4)
			#Delete the invalid email address from the receipients box

		except:
			#Delete the invalid email address from the receipients box
			time.sleep(2)
			pass
		driver.find_element_by_xpath("//textarea[@name='to']").send_keys(Keys.BACKSPACE)
		time.sleep(1)

	return validEmails


